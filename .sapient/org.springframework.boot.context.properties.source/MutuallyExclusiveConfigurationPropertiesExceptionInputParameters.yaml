---
modelFingerprint: "CFC256EB90366E6305E7955036C3CE4F"
methods:
- method:
    name: "getConfiguredNames"
    returnType: "java.util.Set"
    signature: "getConfiguredNames() : java.util.Set<java.lang.String>"
    instructionFingerprint: "9636592D2245BC35783E71C3B56B1F3F"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getConfiguredNamesTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.util.Collection<java.lang.String>,java.util.Collection<java.lang.String>)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "AF26558B7D654A9592C30B238E4BAE47"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "588c8f58-d9c7-34b5-99d8-41da6094ea32"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getMutuallyExclusiveNames"
    returnType: "java.util.Set"
    signature: "getMutuallyExclusiveNames() : java.util.Set<java.lang.String>"
    instructionFingerprint: "762E9231D321F12656B479F0C774F5D1"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getMutuallyExclusiveNamesTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.util.Collection<java.lang.String>,java.util.Collection<java.lang.String>)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "AF26558B7D654A9592C30B238E4BAE47"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "72d31c61-0b35-33c7-89e0-9989fccb818b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "throwIfMultipleNonNullValuesIn"
    returnType: "void"
    signature: "throwIfMultipleNonNullValuesIn(java.util.function.Consumer<java.util.Map<java.lang.String,java.lang.Object>>)\
      \ : void"
    instructionFingerprint: "0F048E3679B4F4C9677F469A36F65ADE"
    parametersTypes:
    - "java.util.function.Consumer"
  paths:
  - pathId: "path3"
    pathIdForUser: "path1"
    testPathName: "throwIfMultipleNonNullValuesInWhenConfiguredNamesSizeNotGreaterThan1"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "B682F5268FC7D95E04ACE4F480A7ECAB"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "entries"
      modelFingerprint: "995926CDC4C02EBEBFEE28A2AA8CAAB9"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "java.util.function.Consumer"
        uuid: "throwIfMultipleNonNullValuesIn_consumer1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "3108182a-2878-331d-9fc8-447f5994d0fc"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Consumer.accept(java.util.Map<java.lang.String,java.lang.Object>)\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path2"
    testPathName: "throwIfMultipleNonNullValuesInWhenCollectionIsNotNullThrowsMutuallyExclusiveConfigurationPropertiesException"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "DF2ABD7AC5CB31479376407D3B91BC39"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "entries"
      modelFingerprint: "995926CDC4C02EBEBFEE28A2AA8CAAB9"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "java.util.function.Consumer"
        uuid: "throwIfMultipleNonNullValuesIn_consumer1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FB5AEB45EB577DAFCD7CACB07A7E62A6"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException"
          parameters:
          - name: "configuredNames"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "configuredNamesItem1"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "configuredNamesItem2"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              suggestedContent: !<collection>
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "configuredNamesItem1"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "configuredNamesItem2"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.LinkedHashSet"
              genericValueType: "java.lang.String"
              uuid: "throwIfMultipleNonNullValuesIn_object1"
              fixed: false
              collectionUuid: "throwIfMultipleNonNullValuesIn_list2"
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "mutuallyExclusiveNames"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                parameters: []
                values: []
              suggestedContent: !<collection>
                parameters: []
                values: []
              valueType: "java.util.Set"
              genericValueType: "java.lang.String"
              uuid: "throwIfMultipleNonNullValuesIn_set2"
              fixed: false
              collectionUuid: "throwIfMultipleNonNullValuesIn_linkedHashMap1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException"
          parameters:
          - name: "configuredNames"
            value:
              sapientType: "COLLECTION"
              suggestedContent: !<collection>
                parameters: []
                values:
                - sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                - sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.LinkedHashSet"
              genericValueType: "java.lang.String"
              uuid: "throwIfMultipleNonNullValuesIn_object1"
              fixed: false
              collectionUuid: "throwIfMultipleNonNullValuesIn_list2"
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "mutuallyExclusiveNames"
            value:
              sapientType: "COLLECTION"
              suggestedContent: !<collection>
                parameters: []
                values: []
              valueType: "java.util.Set"
              genericValueType: "java.lang.String"
              uuid: "throwIfMultipleNonNullValuesIn_set2"
              fixed: false
              collectionUuid: "throwIfMultipleNonNullValuesIn_linkedHashMap1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException"
        uuid: "throwIfMultipleNonNullValuesIn_mutuallyExclusiveConfigurationPropertiesException1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "88052858-048f-33ac-8a82-ddf8cad9aead"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Consumer.accept(java.util.Map<java.lang.String,java.lang.Object>)\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path2"
    pathIdForUser: "path3"
    testPathName: "throwIfMultipleNonNullValuesInWhenCollectionIsNullThrowsMutuallyExclusiveConfigurationPropertiesException"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "5B1CB522725F15538334FDB1E97B046B"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "entries"
      modelFingerprint: "995926CDC4C02EBEBFEE28A2AA8CAAB9"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "java.util.function.Consumer"
        uuid: "throwIfMultipleNonNullValuesIn_consumer1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "02DE592A77FE8EE09602E4EAD60CFCA6"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException"
          parameters:
          - name: "configuredNames"
            value:
              sapientType: "NULL"
              content: !<collection>
                parameters: []
                values:
                - sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                - sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              suggestedContent: !<collection>
                parameters: []
                values:
                - sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                - sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.LinkedHashSet"
              genericValueType: "java.lang.String"
              uuid: "throwIfMultipleNonNullValuesIn_object1"
              fixed: false
              collectionUuid: "throwIfMultipleNonNullValuesIn_list2"
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "mutuallyExclusiveNames"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                parameters: []
                values: []
              suggestedContent: !<collection>
                parameters: []
                values: []
              valueType: "java.util.Set"
              genericValueType: "java.lang.String"
              uuid: "throwIfMultipleNonNullValuesIn_set2"
              fixed: false
              collectionUuid: "throwIfMultipleNonNullValuesIn_linkedHashMap1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException"
          parameters:
          - name: "configuredNames"
            value:
              sapientType: "NULL"
              suggestedContent: !<collection>
                parameters: []
                values:
                - sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                - sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "throwIfMultipleNonNullValuesIn_object1Item1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.LinkedHashSet"
              genericValueType: "java.lang.String"
              uuid: "throwIfMultipleNonNullValuesIn_object1"
              fixed: false
              collectionUuid: "throwIfMultipleNonNullValuesIn_list2"
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "mutuallyExclusiveNames"
            value:
              sapientType: "COLLECTION"
              suggestedContent: !<collection>
                parameters: []
                values: []
              valueType: "java.util.Set"
              genericValueType: "java.lang.String"
              uuid: "throwIfMultipleNonNullValuesIn_set2"
              fixed: false
              collectionUuid: "throwIfMultipleNonNullValuesIn_linkedHashMap1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException"
        uuid: "throwIfMultipleNonNullValuesIn_mutuallyExclusiveConfigurationPropertiesException1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "3dd09632-79d9-3e4f-846b-f9cf2a2ec546"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Consumer.accept(java.util.Map<java.lang.String,java.lang.Object>)\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
